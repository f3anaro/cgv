@if(nr_lights~~UNDEF)@{@define(nr_lights=4)@}
varying vec3 q_tilde;
varying vec3 inv_T_square_v;
varying vec3 inv_T_square_e_c;
varying vec4 ev_clip;
@for(i=0; i<nr_lights; ++i)@{
varying vec3 h@(i);
varying vec3 l@(i);
@}
varying vec4 a;
varying vec4 d;
varying vec4 s;

void main()
{
	float q_tilde_squared_length = dot(q_tilde.xy,q_tilde.xy);
	if (q_tilde_squared_length > 1.0)
		discard;
	float lambda = 1.0/(1.0+q_tilde.z*sqrt(1.0-q_tilde_squared_length));
	vec3 n = inv_T_square_e_c + lambda * inv_T_square_v;

	gl_FragColor = a;
	float ldotn;
    @for(i=0; i<nr_lights; ++i)@{
		ldotn = dot(n,l@(i));
		if (ldotn > 0.0) {
			gl_FragColor += 
				ldotn*gl_LightSource[@(i)].diffuse*d+
				pow(max(dot(n,normalize(h@(i))), 0.0), gl_FrontMaterial.shininess)*
				s*gl_LightSource[@(i)].specular;
		}
	@}
}